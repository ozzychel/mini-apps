class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      tabCount: 0,
      checkoutButtonVisible: true,
      nameField: "",
      emailField: "",
      passwordField: ""
    };
  }

  componentDidMount() {}

  checkoutOnClickHandler() {
    var newNum = this.state.tabCount + 1;
    this.setState({
      tabCount: newNum,
      checkoutButtonVisible: false
    });
  }

  handleNameChange(value) {
    this.setState({
      nameField: value
    });
  }

  getNameState() {
    return this.state.nameField;
  }

  handleEmailChange(value) {
    this.setState({
      emailField: value
    });
  }

  getEmailState() {
    return this.state.emailField;
  }

  handlePasswordChange(value) {
    this.setState({
      passwordField: value
    });
  }

  getPasswordState() {
    return this.state.passwordField;
  }

  submitPersonalData() {
    if (this.state.nameField.length !== 0 || this.state.emailField.length !== 0 || this.state.passwordField.length !== 0) {
      var newObj = {
        name: this.state.nameField,
        email: this.state.emailField,
        password: this.state.passwordField
      };
      this.postPersonalData(newObj, (err, result) => {
        if (err) {
          console.log('POST ERROR');
          console.log(err);
        } else {
          console.log('ITEM POSTED');
          console.log(result);
        }
      });
    }
  }

  postPersonalData(newObj, callback) {
    $.ajax({
      url: 'http://localhost:3000/api/users',
      method: 'POST',
      data: newObj,
      success: data => {
        callback(null, data);
      },
      error: err => {
        callback(err, null);
      }
    });
  }

  tabReturn() {
    if (this.state.tabCount === 0) {
      return /*#__PURE__*/React.createElement("h1", null);
    } else if (this.state.tabCount === 1) {
      return /*#__PURE__*/React.createElement(PersonalData, {
        checkoutOnClickHandler: this.checkoutOnClickHandler.bind(this),
        handleNameChange: this.handleNameChange.bind(this),
        getNameState: this.getNameState.bind(this),
        handleEmailChange: this.handleEmailChange.bind(this),
        getEmailState: this.getEmailState.bind(this),
        handlePasswordChange: this.handlePasswordChange.bind(this),
        getPasswordState: this.getPasswordState.bind(this),
        submitPersonalData: this.submitPersonalData.bind(this)
      });
    } else if (this.state.tabCount === 2) {
      return /*#__PURE__*/React.createElement(Address, {
        checkoutOnClickHandler: this.checkoutOnClickHandler.bind(this)
      });
    } else if (this.state.tabCount === 3) {
      return /*#__PURE__*/React.createElement(Payment, {
        checkoutOnClickHandler: this.checkoutOnClickHandler.bind(this)
      });
    } else {
      return /*#__PURE__*/React.createElement(Summary, null);
    }
  }

  render() {
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("button", {
      type: "button",
      className: this.state.checkoutButtonVisible ? 'checkout-btn-vis' : 'checkout-btn-none',
      onClick: this.checkoutOnClickHandler.bind(this)
    }, "Checkout"), this.tabReturn());
  }

}

var PersonalData = ({
  checkoutOnClickHandler,
  handleNameChange,
  getNameState,
  getEmailState,
  handleEmailChange,
  getPasswordState,
  handlePasswordChange,
  submitPersonalData
}) => /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h1", null, "Personal"), /*#__PURE__*/React.createElement("form", null, /*#__PURE__*/React.createElement("label", null, "Full Name", /*#__PURE__*/React.createElement("input", {
  type: "text",
  placeholder: "Type here...",
  value: getNameState(),
  onChange: () => {
    handleNameChange(event.target.value);
  }
}))), /*#__PURE__*/React.createElement("form", null, /*#__PURE__*/React.createElement("label", null, "Email", /*#__PURE__*/React.createElement("input", {
  type: "text",
  placeholder: "Type here...",
  value: getEmailState(),
  onChange: () => {
    handleEmailChange(event.target.value);
  }
}))), /*#__PURE__*/React.createElement("form", null, /*#__PURE__*/React.createElement("label", null, "Password", /*#__PURE__*/React.createElement("input", {
  type: "text",
  placeholder: "Type here...",
  value: getPasswordState(),
  onChange: () => {
    handlePasswordChange(event.target.value);
  }
}))), /*#__PURE__*/React.createElement("button", {
  type: "button",
  onClick: () => {
    checkoutOnClickHandler();
    submitPersonalData();
  }
}, "Next"));

var Address = ({
  checkoutOnClickHandler
}) => /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h1", null, "Address"), /*#__PURE__*/React.createElement("button", {
  type: "button",
  onClick: checkoutOnClickHandler
}, "Next"));

var Payment = ({
  checkoutOnClickHandler
}) => /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h1", null, "Payment"), /*#__PURE__*/React.createElement("button", {
  type: "button",
  onClick: checkoutOnClickHandler
}, "Next"));

var Summary = () => /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h1", null, "Summary"));

ReactDOM.render( /*#__PURE__*/React.createElement(App, null), document.getElementById('app'));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,